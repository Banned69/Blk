{"name":"Blk-game","body":"blk-game\r\n========\r\n\r\nTHIS IS NOT MINECRAFT. This is my 20% project attempt at creating a fully\r\nmodifiable multiplayer voxel world in JS that can run efficiently in the\r\nbrowser and learning what the pain points are in doing a project of this scale.\r\nIt's just a tech demo of a high-fidelity 100% JavaScript game. Enjoy it for what it is!\r\n\r\nI wanted to do something productive with my 20% time at Google. I've been\r\npreaching that the web is finally ready for real games, so I figured I'd\r\ntry to make one. This is the result. Heavy inspiration comes from Mojang,\r\nof course: Minecraft is cool, but more importantly it's technically\r\ndifficult to get running well, especially in the browser.\r\n\r\nAll of the code for this project, including the voxel world client and server,\r\nthe game framework, and the build system used to produce the final output are\r\nall open sourced. I'll be continuing to develop the game framework and build\r\nsystem, and if I have time throw some more features into this demo (like real\r\ngameplay, for example). Feel free to fork! Have fun!\r\n\r\n## Tech\r\n\r\nThis project uses [anvil-build](https://github.com/benvanik/anvil-build) as a build system and builds atop the low-level\r\nweb game framework [games-framework](https://github.com/benvanik/games-framework).\r\n\r\nUnderlying this demo is a highly modularized library I wrote for this project,\r\n[games-framework](https://github.com/benvanik/games-framework), that sits atop\r\n[Google Closure](http://code.google.com/closure/), using the Closure Library as a base and the Closure Compiler to build\r\nthe tiny output Javascript files. Designed to be a set of tools to enable rapid high-quality games, it's not an engine\r\n(like Unity) or scene graph (like three.js), but more like XNA or SDL. Pick what you need, get started quickly, and\r\nspend timing writing game code vs. platform abstractions.\r\n\r\nThe server portions of the demo are written such that they share code with the client and can run both on node.js and\r\nin the browser. This enables a great deal of code reuse and the ability to do things like a local game server when\r\nrunning offline or multiplayer over the network using node. The Closure Compiler ensures that code that's used\r\nexclusively on the server isn't included in the code sent for the client and works great in all environments.\r\n\r\n## Credits\r\n\r\nEverything not listed below was authored by [Ben Vanik](http://noxa.org).\r\n\r\n#### Audio\r\n\r\nSound effects: [Sean Dunn](https://twitter.com/somenotes)\r\n\r\nMusic: [Knuck Beatz](http://soundcloud.com/casesensative/knuck-beatz-so-many-blocks-so) So Many Blocks, So Little Time (Minecraft Soundtrack)\r\n\r\n#### Fonts\r\n\r\nBitmap font used in game: [Lord Nightmare/IBM's EGA Font](http://dwarffortresswiki.org/images/a/ae/LN_EGA8x8.png) (from [The Dwarf Fortress Wiki](http://dwarffortresswiki.org/index.php/Tileset_repository))\r\n\r\nTTF font used in UI/etc: [Volter (Goldfish)](http://www.dafont.com/volter-goldfish.font)\r\n\r\n#### Textures\r\n\r\n[The Painterly Pack](http://painterlypack.net)\r\n\r\n# License\r\n\r\nAll code except dependencies under third_party/ is licensed under the permissive Apache 2.0 license.\r\nFeel free to fork/rip/etc and use as you wish!\r\n\r\n# Contributing\r\n\r\nHave a fix or feature? Submit a pull request - I love them!\r\nNote that I do keep to the [style_guide](https://github.com/benvanik/games-framework/blob/master/docs/style_guide.md),\r\nso please check it out first!\r\n\r\nAs this is a Google project, you *must* first e-sign the\r\n[Google Contributor License Agreement](http://code.google.com/legal/individual-cla-v1.0.html) before I can accept any\r\ncode. It takes only a second and basically just says you won't sue us or claim copyright of your submitted code.\r\n","tagline":"","google":"UA-541992-7","note":"Don't delete this file! It's used internally to help with page regeneration."}